#include <iostream>
#include<vector>
#include <iomanip>

using std::cin, std::cout, std::endl, std::setw;
using VD = std::vector<double>;
using VDD = std::vector<VD>;

VDD creatematrix(int row, int col) {
	VDD m(row, VD(col, 0));
	return m;
}

void printmatrix(VDD mat) { //wypisuje macierz
	for (int row = 0; row < mat[0].size(); row++) {
		for (int col = 0; col < mat.size(); col++) {
			cout << setw(4) << mat[col][row];
		}
		cout << endl;
	}
}

VDD summatrix(VDD a, VDD b)
{
	VDD sum(a.size(),VD(a[0].size(),0));
	for (int row = 0; row < a[0].size(); row++) {
		for (int col = 0; col < a.size(); col++) {
			sum[col][row] = a[col][row] + b[col][row];
		}
	}
	return sum;
}

VDD mmat(VDD a, VDD b)
{
	VDD mult(a[0].size(), VD(b.size(), 0));
	for (int row = 0; row < a[0].size(); row++) {
		for (int col = 0; col < b.size(); col++) {
			for (int k = 0; k < b.size(); k++) {
				mult[row][col] = a[row][col] * b[col][row];
			}
		}
	}

	return mult;
}

int main()
{
	int col, row;

	//cout << "Enter matrix size [col][row]" << endl;
	//cin >> col >> row;
	
	//VDD mat{ creatematrix(col, row) }, mat2{ creatematrix(col,row)};
	
	VDD mat(2, VD(3, 0));
	mat = {
			{1,0,2},
			{-1,3,1},
	};
	VDD mat2(3, VD(2, 0));
	mat2 = {
			{3,1},
			{2,1},
			{1,0},
	};


	//VDD mat2(5, VD(4, 3));
	//printmatrix(summatrix(mat,mat2));

	//mult()

	//printmatrix(mat);
	cout<<endl<<"koniec" << endl;
}
